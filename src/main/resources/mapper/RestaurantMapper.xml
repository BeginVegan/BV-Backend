<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.beginvegan.mybatis.RestaurantMapper">

    <select id="selectAllRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Restaurant;
    </select>

    <select id="selectRestaurantByRestaurantNo" parameterType="int" resultType="RestaurantDTO">
        SELECT * FROM Restaurant
        WHERE restaurant_no = #{restaurantNo};
    </select>

    <insert id="insertRestaurant" parameterType="restaurantDTO" useGeneratedKeys="true" keyProperty="restaurantNo">
        INSERT INTO Restaurant (restaurant_name, restaurant_address, restaurant_address_gu, restaurant_x, restaurant_y, restaurant_open, restaurant_close, restaurant_phone, restaurant_detail, restaurant_avg_price, restaurant_table, restaurant_table_member, restaurant_vegan_level, restaurant_photo_dir, restaurant_star)
        VALUES (#{restaurantName}, #{restaurantAddress}, #{restaurantAddressGu}, #{restaurantX}, #{restaurantY}, #{restaurantOpen}, #{restaurantClose}, #{restaurantPhone}, #{restaurantDetail}, #{restaurantAvgPrice}, #{restaurantTable}, #{restaurantTableMember}, #{restaurantVeganLevel}, #{restaurantPhotoDir}, #{restaurantStar})
    </insert>

<!--    <insert id="insertRestaurantMenu" parameterType="java.util.Map">-->
<!--        INSERT INTO Menu (restaurant_no, menu_name, menu_price, menu_category, menu_detail, menu_photo_dir)-->
<!--        VALUES-->
<!--        <foreach collection="menuList" item="menu" separator=",">-->
<!--        (-->
<!--            #{restaurantNo},-->
<!--            #{menu.menuName},-->
<!--            #{menu.menuPrice},-->
<!--            #{menu.menuCategory},-->
<!--            #{menu.menuDetail},-->
<!--            #{menu.menuPhotoDir}-->
<!--        )-->
<!--        </foreach>-->
<!--    </insert>-->

    <insert id="insertRestaurantMenu" parameterType="java.util.Map">
        INSERT INTO Menu (restaurant_no, menu_name, menu_price, menu_category, menu_detail, menu_photo_dir)
        VALUES
        <foreach collection="menuList" item="menu" separator=",">
            (
            #{restaurantNo},
            #{menu.menuName},
            #{menu.menuPrice},
            #{menu.menuCategory},
            #{menu.menuDetail},
            #{menu.menuPhotoDir}
            )
        </foreach>
    </insert>

    <select id="selectAllMenuByRestaurantNo" parameterType="int" resultType="MenuDTO">
        SELECT * FROM Menu
        WHERE restaurant_no = #{restaurantNo}
    </select>

    <delete id="deleteRestaurant" parameterType="int">
        DELETE FROM Restaurant
        WHERE restaurant_no = #{restaurantNo}
    </delete>

    <update id="updateRestaurant" parameterType="RestaurantDTO">
        UPDATE Restaurant
        SET restaurant_name = #{restaurantName}, restaurant_address = #{restaurantAddress}, restaurant_address_gu = #{restaurantAddressGu}, restaurant_x = #{restaurantX}, restaurant_y = #{restaurantY}, restaurant_open = #{restaurantOpen}, restaurant_close = #{restaurantClose}, restaurant_phone = #{restaurantPhone}, restaurant_detail = #{restaurantDetail}, restaurant_avg_price = #{restaurantAvgPrice}, restaurant_table = #{restaurantTable}, restaurant_table_member = #{restaurantTableMember}, restaurant_vegan_level = #{restaurantVeganLevel}
        WHERE restaurant_no = #{restaurantNo}
    </update>

<!--    <update id="updateRestaurantMenu" parameterType="java.util.List">-->
<!--        <foreach collection="menuList" item="menu" separator=";">-->
<!--            UPDATE Menu-->
<!--            SET-->
<!--                menu_name = #{menu.menuName},-->
<!--                menu_price = #{menu.menuPrice},-->
<!--                menu_category = #{menu.menuCategory},-->
<!--                menu_detail = #{menu.menuDetail},-->
<!--                menu_photo_dir = #{menu.menuPhotoDir}-->
<!--            WHERE-->
<!--                menu_no = #{menu.menuNo}-->
<!--        </foreach>-->
<!--    </update>-->

    <delete id="deleteRestaurantMenu" parameterType="int">
        DELETE FROM Menu
        WHERE restaurant_no = #{restaurantNo};
    </delete>

    <select id="selectBestStarRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Best_Star_View;
    </select>

    <select id="selectBestReviewRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Best_Review_View;
    </select>

    <select id="selectBestReservationRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Best_Reservation_View;
    </select>

    <resultMap id="restaurantResultMap" type="RestaurantDTO">
        <id property="restaurantNo"                 column="restaurant_no" />
        <result property="restaurantName"           column="restaurant_name" />
        <result property="restaurantAddress"        column="restaurant_address"/>
        <result property="restaurantAddressGu"      column="restaurant_address_gu"/>
        <result property="restaurantX"              column="restaurant_x"/>
        <result property="restaurantY"              column="restaurant_y"/>
        <result property="restaurantOpen"           column="restaurant_open"/>
        <result property="restaurantClose"          column="restaurant_close"/>
        <result property="restaurantPhone"          column="restaurant_phone"/>
        <result property="restaurantDetail"         column="restaurant_detail"/>
        <result property="restaurantAvgPrice"       column="restaurant_avg_price"/>
        <result property="restaurantTable"          column="restaurant_table"/>
        <result property="restaurantTableMember"    column="restaurant_table_member"/>
        <result property="restaurantVeganLevel"     column="restaurant_vegan_level"/>
        <result property="restaurantPhotoDir"       column="restaurant_photo_dir"/>
        <result property="restaurantStar"           column="restaurant_star"/>

        <collection property="menuList" javaType="List" ofType="MenuDTO">
            <result property="menuNo"               column="menu_no" />
            <result property="restaurantNo"         column="restaurant_no" />
            <result property="menuName"             column="menu_name" />
            <result property="menuPrice"            column="menu_price" />
            <result property="menuCategory"         column="menu_category" />
            <result property="menuDetail"           column="menu_detail" />
            <result property="menuPhotoDir"         column="menu_photo_dir" />
        </collection>
    </resultMap>

    <select id="selectRestaurantMenuByRestaurantNo" parameterType="int" resultMap="restaurantResultMap">
        SELECT Restaurant.*, Menu.*
        FROM Restaurant
                 LEFT JOIN Menu ON Restaurant.restaurant_no = Menu.restaurant_no
        WHERE Restaurant.restaurant_no = #{restaurantNo};
    </select>


    <select id="selectAllRestaurantByKeyword" parameterType="java.util.Map" resultType="RestaurantDTO">
        SELECT DISTINCT r.*
        FROM Restaurant r
             LEFT OUTER JOIN Menu m
             ON r.restaurant_no = m.restaurant_no
        WHERE
            <foreach collection="keywords" item="keyword" separator="AND">
                (
                    r.restaurant_name LIKE CONCAT('%', #{keyword}, '%') COLLATE utf8mb4_general_ci
                    OR r.restaurant_address_gu LIKE CONCAT('%', #{keyword}, '%') COLLATE utf8mb4_general_ci
                    OR m.menu_name LIKE CONCAT('%', #{keyword}, '%') COLLATE utf8mb4_general_ci
                )
            </foreach>
        ORDER BY
            CASE
                WHEN r.restaurant_name LIKE CONCAT('%', #{entireKeyword}, '%') COLLATE utf8mb4_general_ci THEN 1
                ELSE 2
            END;
    </select>

    <select id="selectAllReservationByRestaurantNo" parameterType="int" resultType="ReservationDTO">
        SELECT Reservation.*
        FROM Reservation, Restaurant
        WHERE Reservation.restaurant_no = Restaurant.restaurant_no
        AND Reservation.restaurant_no = #{restaurantNo};
    </select>

    <!-- 아래는 View 생성 쿼리문입니다. -->
    <select id="createBestStarView">
        DROP VIEW IF EXISTS Best_Star_View;
        CREATE VIEW Best_Star_View AS
        (
            SELECT * FROM Restaurant ORDER BY restaurant_star DESC LIMIT 10
        );
    </select>

    <select id="createBestReviewView">
        DROP VIEW IF EXISTS Best_Review_View;
        CREATE VIEW Best_Review_View AS
        (
            SELECT *
            FROM Restaurant rest
            ORDER BY (SELECT COUNT(*) FROM Review rev WHERE rest.restaurant_no = rev.restaurant_no) DESC, restaurant_no ASC
            LIMIT 10
        );
    </select>

    <select id="createBestReservationView">
        DROP VIEW IF EXISTS Best_Reservation_View;
        CREATE VIEW Best_Reservation_View AS
        (
            SELECT *
            FROM Restaurant rest
            ORDER BY (SELECT COUNT(*) FROM Reservation reserv WHERE rest.restaurant_no = reserv.restaurant_no AND reserv.reservation_status='예약') DESC, restaurant_no ASC
            LIMIT 10
        );
    </select>

    <update id="updateRestaurantStar">
        UPDATE Restaurant
        SET restaurant_star = (
            SELECT AVG(review_star)
            FROM Review
            WHERE Review.restaurant_no = Restaurant.restaurant_no
            GROUP BY restaurant_no
        )
        WHERE restaurant_no IN (
            SELECT restaurant_no
            FROM Review
            GROUP BY restaurant_no
        );
    </update>

    <!-- 아래는 테스트를 위한 쿼리문입니다. -->
    <select id="selectBestStarRestaurantTest" resultType="RestaurantDTO">
        SELECT * FROM Restaurant
        ORDER BY restaurant_star DESC
        LIMIT 10;
    </select>

    <select id="selectBestReviewRestaurantTest" resultType="RestaurantDTO">
        SELECT *
        FROM Restaurant rest
        ORDER BY (SELECT COUNT(*) FROM Review rev WHERE rest.restaurant_no = rev.restaurant_no) DESC, restaurant_no ASC
        LIMIT 10;
    </select>

    <select id="selectBestReservationRestaurantTest" resultType="RestaurantDTO">
        SELECT *
        FROM Restaurant rest
        ORDER BY (SELECT COUNT(*) FROM Reservation reserv WHERE rest.restaurant_no = reserv.restaurant_no AND reserv.reservation_status='예약') DESC, restaurant_no ASC
        LIMIT 10;
    </select>

    <select id="selectNextMenuNo" resultType="int">
        SELECT AUTO_INCREMENT
        FROM information_schema.tables
        WHERE table_name = 'Menu' AND table_schema = DATABASE()
    </select>

    <select id="selectNextRestaurantNo" resultType="int">
        SELECT AUTO_INCREMENT
        FROM information_schema.tables
        WHERE table_name = 'Restaurant' AND table_schema = DATABASE()
    </select>
</mapper>
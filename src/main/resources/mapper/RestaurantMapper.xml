<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.beginvegan.mybatis.RestaurantMapper">

    <select id="selectAllRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Restaurant;
    </select>

    <select id="selectRestaurantByRestaurantNo" parameterType="int" resultType="RestaurantDTO">
        SELECT * FROM Restaurant
        WHERE restaurant_no = #{restaurantNo};
    </select>

    <insert id="insertRestaurant" parameterType="restaurantDTO" useGeneratedKeys="true" keyProperty="restaurantNo">
        INSERT INTO Restaurant (restaurant_name, restaurant_address, restaurant_address_gu, restaurant_x, restaurant_y, restaurant_open, restaurant_close, restaurant_detail, restaurant_avg_price, restaurant_table, restaurant_table_member, restaurant_vegan_level, restaurant_photo_dir, restaurant_star)
        VALUES (#{restaurantName}, #{restaurantAddress}, #{restaurantAddressGu}, #{restaurantX}, #{restaurantY}, #{restaurantOpen, typeHandler=org.apache.ibatis.type.TimeOnlyTypeHandler}, #{restaurantClose, typeHandler=org.apache.ibatis.type.TimeOnlyTypeHandler}, #{restaurantDetail}, #{restaurantAvgPrice}, #{restaurantTable}, #{restaurantTableMember}, #{restaurantVeganLevel}, #{restaurantPhotoDir}, #{restaurantStar})
    </insert>

    <insert id="insertRestaurantMenu" parameterType="java.util.Map">
        INSERT INTO Menu (restaurant_no, menu_name, menu_price, menu_category, menu_detail, menu_photo_dir)
        VALUES
        <foreach collection="menuList" item="menu" separator=",">
        (
            #{restaurantNo},
            #{menu.menuName},
            #{menu.menuPrice},
            #{menu.menuCategory},
            #{menu.menuDetail},
            #{menu.menuPhotoDir}
        )
        </foreach>
    </insert>

    <select id="selectAllMenuByRestaurantNo" parameterType="int" resultType="MenuDTO">
        SELECT * FROM Menu
        WHERE restaurant_no = #{restaurantNo}
    </select>

    <delete id="deleteRestaurant" parameterType="int">
        DELETE FROM Restaurant
        WHERE restaurant_no = #{restaurantNo}
    </delete>

    <update id="updateRestaurant" parameterType="RestaurantDTO">
        UPDATE Restaurant
        SET restaurant_name = #{restaurantName}, restaurant_address = #{restaurantAddress}, restaurant_address_gu = #{restaurantAddressGu}, restaurant_x = #{restaurantX}, restaurant_y = #{restaurantY}, restaurant_open = #{restaurantOpen}, restaurant_close = #{restaurantClose}, restaurant_detail = #{restaurantDetail}, restaurant_avg_price = #{restaurantAvgPrice}, restaurant_table = #{restaurantTable}, restaurant_table_member = #{restaurantTableMember}, restaurant_vegan_level = #{restaurantVeganLevel}, restaurant_photo_dir = #{restaurantPhotoDir}, restaurant_star = #{restaurantStar}
        WHERE restaurant_no = #{restaurantNo}
    </update>

<!--    <update id="updateRestaurantMenu" parameterType="java.util.List">-->
<!--        <foreach collection="menuList" item="menu" separator=";">-->
<!--            UPDATE Menu-->
<!--            SET-->
<!--                menu_name = #{menu.menuName},-->
<!--                menu_price = #{menu.menuPrice},-->
<!--                menu_category = #{menu.menuCategory},-->
<!--                menu_detail = #{menu.menuDetail},-->
<!--                menu_photo_dir = #{menu.menuPhotoDir}-->
<!--            WHERE-->
<!--                menu_no = #{menu.menuNo}-->
<!--        </foreach>-->
<!--    </update>-->

    <delete id="deleteRestaurantMenu" parameterType="int">
        DELETE FROM Menu
        WHERE restaurant_no = #{restaurantNo};
    </delete>

    <select id="selectBestRestaurant" resultType="RestaurantDTO">
        SELECT * FROM Best_Restaurant_View;
    </select>

<!--    <select id="selectAllRestaurantByKeyword(String)" parameterType="" resultType="RestaurantDTO">-->
<!--        SELECT * FROM Restaurant-->
<!--        WHERE -->
<!--    </select>-->

    <!-- 아래는 View 생성 쿼리문입니다. -->
    <select id="createBestStarView">
        DROP VIEW IF EXISTS Best_Star_View;
        CREATE VIEW Best_Star_View AS
        (
            SELECT * FROM Restaurant ORDER BY restaurant_star DESC LIMIT 10
        );
    </select>

    <select id="createBestReviewView">
        DROP VIEW IF EXISTS Best_Review_View;
        CREATE VIEW Best_Review_View AS
        (
            SELECT *
            FROM Restaurant rest
            ORDER BY (SELECT COUNT(*) FROM Review rev WHERE rest.restaurant_no = rev.restaurant_no) DESC, restaurant_no ASC
            LIMIT 10
        );
    </select>

    <select id="createBestReservationView">
        DROP VIEW IF EXISTS Best_Reservation_View;
        CREATE VIEW Best_Reservation_View AS
        (
            SELECT *
            FROM Restaurant rest
            ORDER BY (SELECT COUNT(*) FROM Reservation reserv WHERE rest.restaurant_no = reserv.restaurant_no) DESC, restaurant_no ASC
            LIMIT 10
        );
    </select>

    <!-- 아래는 테스트를 위한 쿼리문입니다. -->
    <select id="selectMaxRestaurantNoTest" resultType="int">
        SELECT MAX(restaurant_no) FROM Restaurant;
    </select>

    <select id="selectRestaurantCntTest" resultType="int">
        SELECT COUNT(*) FROM Restaurant;
    </select>
</mapper>